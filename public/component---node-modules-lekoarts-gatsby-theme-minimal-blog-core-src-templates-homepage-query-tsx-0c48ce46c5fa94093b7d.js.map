{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","isMDXComponent","Homepage","posts","blogPath","p","mt","text","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","title","style","excerpt","Listing","className","href","textDecoration"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-0c48ce46c5fa94093b7d.js","sourcesContent":["import React from \"react\"\r\nimport { Link as TLink } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </TLink>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: 'bold',\n      color: 'heading'\n    }} mdxType=\"Text\"> RoboKnights\n    </Text>\n    <p>{`RoboKnights is the Robotics Club of DPS RK Puram consisting of engineering and science aficionados.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype ListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst List = ({ children }: ListProps) => (\r\n  <section\r\n    sx={{\r\n      mb: [5, 5, 6],\r\n      ul: { margin: 0, padding: 0 },\r\n      li: { listStyle: `none`, mb: 3 },\r\n      a: { variant: `links.listItem` },\r\n    }}\r\n  >\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default List\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Ths site ends here!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\nimport Title from \"./title\"\r\nimport Listing from \"./listing\"\r\nimport List from \"./list\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n// @ts-ignore\r\nimport Hero from \"../texts/hero\"\r\n// @ts-ignore\r\nimport Bottom from \"../texts/bottom\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead?: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  [key: string]: any\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <Layout>\r\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Hero />\r\n      </section>\r\n      <Title text=\"Latest Posts\">\r\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\r\n      </Title>\r\n      <Listing posts={posts} showTags={false} />\r\n      <List>\r\n        <Bottom />\r\n      </List>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query($formatString: String!) {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: $formatString)\r\n        excerpt\r\n        timeToRead\r\n        description\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n  [key: string]: any\r\n}\r\n\r\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\r\n  const {\r\n    data: { allPost },\r\n  } = props\r\n\r\n  return <Homepage posts={allPost.nodes} {...props} />\r\n}\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Link as TLink } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead?: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </TLink>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }} style={{padding:\"0px\",margin:\"0px\"}}>\r\n      <p style={{padding:\"0px\",margin:\"0px\"}}>{post.excerpt}</p>\r\n      \r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` — `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport BlogListItem from \"./blog-list-item\"\r\nimport { Box } from \"@theme-ui/components\"  \r\nimport { jsx, Heading, Link as TLink } from \"theme-ui\"\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead?: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map((post) => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n            <Box mb={4}>\r\n            <a href=\"/resources\" sx={{textDecoration:\"none\"}}>\r\n              <TLink as=\"resources\" to=\"/resources\" sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n                Resources\r\n              </TLink>\r\n              <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }} style={{padding:\"0px\",margin:\"0px\"}}>\r\n                <p style={{padding:\"0px\",margin:\"0px\"}}>\r\n                  This year, Roboknights released its learning resources to help every budding roboticists to gather knowledge\r\n                </p>\r\n                \r\n                \r\n              </p>\r\n            </a>\r\n            </Box>\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n"],"sourceRoot":""}